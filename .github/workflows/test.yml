name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fastapi_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        pip install fastapi httpx playwright requests
        pip install sqlalchemy psycopg2-binary python-dotenv passlib bcrypt
        pip install pydantic[email] pydantic-settings email-validator faker
        playwright install chromium

    - name: Create .env file
      run: |
        echo "db_host=localhost" >> .env
        echo "db_user=postgres" >> .env
        echo "db_password=postgres" >> .env
        echo "db_name=fastapi_db" >> .env
        echo "db_port=5432" >> .env
        echo "salt=aafasdfsdfsdfasdf" >> .env

    - name: Load environment variables
      run: |
        python -m dotenv  # This ensures the .env file is loaded correctly

    - name: Run unit tests
      run: |
        pytest test_operations.py test_calculator.py -v --cov=app

    - name: Run API tests
      run: |
        pytest test_fastapi_calculator.py -v --cov=app

    - name: Run database tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: fastapi_db
        SALT: aafasdfsdfsdfasdf
      run: |
        pytest test_sqlalchemy.py -v --cov=app

    - name: Generate coverage report
      run: |
        pytest --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
